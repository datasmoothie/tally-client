# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build:
    environment: Production
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        PYTHONVERSION=$(python --version|awk '/3.10/{print substr($2,0,4)}')
        if [ "$PYTHONVERSION" == "3.10" ]; then sed -i 's/numpy==1.20.3/numpy==1.23.4/g' requirements.txt && sed -i 's/pandas==1.2.4/pandas==1.4.0/g' requirements.txt && echo "REPLACE THE requirements.txt" ; fi
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=300 --statistics
    - name: Test with pytest
      run: |
        python -m pytest --token="$TALLY_PR_TOKEN"
      env:
        TALLY_PR_TOKEN: ${{ secrets.TALLY_PR_TOKEN }}
