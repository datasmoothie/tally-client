{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2a343f63",
   "metadata": {},
   "source": [
    "# Explore data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "943783d7",
   "metadata": {
    "tags": [
     "remove-cell"
    ]
   },
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: './data/Example Data (A).sav'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[1], line 4\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mos\u001b[39;00m\n\u001b[1;32m      3\u001b[0m dataset \u001b[38;5;241m=\u001b[39m tally\u001b[38;5;241m.\u001b[39mDataSet(api_key\u001b[38;5;241m=\u001b[39mos\u001b[38;5;241m.\u001b[39menviron\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtally_api_key\u001b[39m\u001b[38;5;124m'\u001b[39m))\n\u001b[0;32m----> 4\u001b[0m \u001b[43mdataset\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43muse_spss\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m./data/Example Data (A).sav\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m/workspace/.pyenv_mirror/user/current/lib/python3.8/site-packages/tally/dataset.py:108\u001b[0m, in \u001b[0;36mDataSet.use_spss\u001b[0;34m(self, file_path)\u001b[0m\n\u001b[1;32m     98\u001b[0m \u001b[38;5;250m\u001b[39m\u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m     99\u001b[0m \u001b[38;5;124;03mLoad SPSS file into memory as the file to send with all requests.\u001b[39;00m\n\u001b[1;32m    100\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    104\u001b[0m \u001b[38;5;124;03m        Path to the sav file we want to use as our data.\u001b[39;00m\n\u001b[1;32m    105\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    106\u001b[0m \u001b[38;5;66;03m# this is okay because the path format will be the same as the OS running this\u001b[39;00m\n\u001b[0;32m--> 108\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m \u001b[38;5;28;43mopen\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mfile_path\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmode\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mrb\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m \u001b[38;5;28;01mas\u001b[39;00m file:\n\u001b[1;32m    109\u001b[0m     fileContent \u001b[38;5;241m=\u001b[39m file\u001b[38;5;241m.\u001b[39mread()\n\u001b[1;32m    111\u001b[0m payload\u001b[38;5;241m=\u001b[39m{}\n",
      "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: './data/Example Data (A).sav'"
     ]
    }
   ],
   "source": [
    "import tally\n",
    "import os\n",
    "dataset = tally.DataSet(api_key=os.environ.get('tally_api_key'))\n",
    "dataset.use_spss('./data/Example Data (A).sav')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9e658556",
   "metadata": {},
   "source": [
    "Once our data is loaded, we can explore what variables it has and the meta data for the variables. We assume that the data [has been loaded](../1_load_data) into a variable called `dataset`. For more information on the API endpoints used in these examples, refer to the [Tally API documentation](https://tally.datasmoothie.com).\n",
    "\n",
    "## variables - Listing variables\n",
    "\n",
    "Use the [variables](https://tally.datasmoothie.com/#tag/Data-Processing/operation/variables) method to get a list of variables. It returns a dictionary with the keys keys `single`, `delimited set`, `array`, `int`, `float`, `string`, `date`. These all have a list of strings that are the names of variables."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "831f7c39",
   "metadata": {
    "tags": [
     "scroll-output"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'single': ['gender',\n",
       "  'locality',\n",
       "  'ethnicity',\n",
       "  'religion',\n",
       "  'q1',\n",
       "  'q2__1',\n",
       "  'q2__2',\n",
       "  'q2__3',\n",
       "  'q2__4',\n",
       "  'q2__5',\n",
       "  'q2__6',\n",
       "  'q2__97',\n",
       "  'q2__98',\n",
       "  'q2b',\n",
       "  'q3__1',\n",
       "  'q3__2',\n",
       "  'q3__3',\n",
       "  'q3__4',\n",
       "  'q3__5',\n",
       "  'q3__6',\n",
       "  'q3__7',\n",
       "  'q3__8',\n",
       "  'q3__97',\n",
       "  'q4',\n",
       "  'q5_1',\n",
       "  'q5_2',\n",
       "  'q5_3',\n",
       "  'q5_4',\n",
       "  'q5_5',\n",
       "  'q5_6',\n",
       "  'q6_1',\n",
       "  'q6_2',\n",
       "  'q6_3',\n",
       "  'q7_1',\n",
       "  'q7_2',\n",
       "  'q7_3',\n",
       "  'q7_4',\n",
       "  'q7_5',\n",
       "  'q7_6',\n",
       "  'q8__1',\n",
       "  'q8__2',\n",
       "  'q8__3',\n",
       "  'q8__4',\n",
       "  'q8__5',\n",
       "  'q8__96',\n",
       "  'q8__98',\n",
       "  'q9__1',\n",
       "  'q9__2',\n",
       "  'q9__3',\n",
       "  'q9__4',\n",
       "  'q9__96',\n",
       "  'q9__98',\n",
       "  'q9__99',\n",
       "  'Wave',\n",
       "  'q14r01c01',\n",
       "  'q14r01c02',\n",
       "  'q14r01c03',\n",
       "  'q14r02c01',\n",
       "  'q14r02c02',\n",
       "  'q14r02c03',\n",
       "  'q14r03c01',\n",
       "  'q14r03c02',\n",
       "  'q14r03c03',\n",
       "  'q14r04c01',\n",
       "  'q14r04c02',\n",
       "  'q14r04c03',\n",
       "  'q14r05c01',\n",
       "  'q14r05c02',\n",
       "  'q14r05c03',\n",
       "  'q14r06c01',\n",
       "  'q14r06c02',\n",
       "  'q14r06c03',\n",
       "  'q14r07c01',\n",
       "  'q14r07c02',\n",
       "  'q14r07c03',\n",
       "  'q14r08c01',\n",
       "  'q14r08c02',\n",
       "  'q14r08c03',\n",
       "  'q14r09c01',\n",
       "  'q14r09c02',\n",
       "  'q14r09c03',\n",
       "  'q14r10c01',\n",
       "  'q14r10c02',\n",
       "  'q14r10c03'],\n",
       " 'delimited set': [],\n",
       " 'array': [],\n",
       " 'int': [],\n",
       " 'float': ['record_number',\n",
       "  'unique_id',\n",
       "  'age',\n",
       "  'birth_day',\n",
       "  'birth_month',\n",
       "  'birth_year',\n",
       "  'weight_a',\n",
       "  'weight_b'],\n",
       " 'string': ['q8a', 'q9a', 'start_time', 'end_time', 'duration'],\n",
       " 'date': [],\n",
       " 'time': [],\n",
       " 'N/A': ['Unnamed: 0'],\n",
       " 'params': {}}"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.variables()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "396c8a21",
   "metadata": {},
   "source": [
    "```\n",
    ">>> \n",
    "{'single': \n",
    "    ['gender', \n",
    "     'locality', \n",
    "      'ethnicity', \n",
    "      'q1', \n",
    "      'q2_1', \n",
    "      ... \n",
    "}\n",
    "```\n",
    "\n",
    "## meta - Exploring meta data\n",
    "\n",
    "Use the [meta](https://tally.datasmoothie.com/#tag/Data-Processing/operation/meta) method to explore answer codes and labels.\n",
    "\n",
    "```\n",
    ">>> dataset.meta('q1')\n",
    "```\n",
    "<table border=\"1\" class=\"dataframe\">  <thead>    <tr style=\"text-align: left;\">      <th></th>      <th>codes</th>      <th>texts</th>      <th>missing</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>1</td>      <td>CBD (central business district)</td>      <td>None</td>    </tr>    <tr>      <th>2</th>      <td>2</td>      <td>Urban</td>      <td>None</td>    </tr>    <tr>      <th>3</th>      <td>3</td>      <td>Suburban</td>      <td>None</td>    </tr>    <tr>      <th>4</th>      <td>4</td>      <td>Rural</td>      <td>None</td>    </tr>    <tr>      <th>5</th>      <td>5</td>      <td>Remote</td>      <td>None</td>    </tr>  </tbody></table>\n",
    "\n",
    "## Other methods to explore data\n",
    "\n",
    "Other methods to explore the data include [get_variable_text](https://tally.datasmoothie.com/#tag/Data-Processing/operation/getVariableText), [find](https://tally.datasmoothie.com/#tag/Datasources-and-files/operation/find), [values](https://tally.datasmoothie.com/#tag/Data-Processing/operation/values).\n",
    "\n",
    "## Pandas dataframe\n",
    "\n",
    "The data can also be accessed as a pandas dataframe.\n",
    "\n",
    "```\n",
    ">>> df = dataset.get_dataframe()\n",
    "\n",
    ">>> df.head()\n",
    "```\n",
    "<div style=\"overflow-x:scroll;\">\n",
    "<table border=\"1\" class=\"dataframe\">  <thead>    <tr style=\"text-align: right;\">      <th></th>      <th>record_number</th>      <th>unique_id</th>      <th>age</th>      <th>birth_day</th>      <th>birth_month</th>      <th>birth_year</th>      <th>gender</th>      <th>locality</th>      <th>ethnicity</th>      <th>religion</th>      <th>q1</th>      <th>q2__1</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>2.0</td>      <td>402891.0</td>      <td>22.0</td>      <td>25.0</td>      <td>3.0</td>      <td>1993.0</td>      <td>1.0</td>      <td>1.0</td>      <td>1.0</td>      <td>2.0</td>      <td>4.0</td>      <td>1.0</td>    </tr>    <tr>      <th>1</th>      <td>3.0</td>      <td>27541022.0</td>      <td>22.0</td>      <td>27.0</td>      <td>11.0</td>      <td>1993.0</td>      <td>2.0</td>      <td>3.0</td>      <td>1.0</td>      <td>NaN</td>      <td>4.0</td>      <td>0.0</td>    </tr>    <tr>      <th>2</th>      <td>4.0</td>      <td>335506.0</td>      <td>28.0</td>      <td>3.0</td>      <td>11.0</td>      <td>1987.0</td>      <td>1.0</td>      <td>2.0</td>      <td>1.0</td>      <td>3.0</td>      <td>7.0</td>      <td>NaN</td>    </tr>    <tr>      <th>3</th>      <td>5.0</td>      <td>22885610.0</td>      <td>31.0</td>      <td>11.0</td>      <td>9.0</td>      <td>1984.0</td>      <td>1.0</td>      <td>2.0</td>      <td>1.0</td>      <td>NaN</td>      <td>5.0</td>      <td>NaN</td>    </tr>    <tr>      <th>4</th>      <td>6.0</td>      <td>229122.0</td>      <td>38.0</td>      <td>24.0</td>      <td>4.0</td>      <td>1977.0</td>      <td>1.0</td>      <td>1.0</td>      <td>1.0</td>      <td>NaN</td>      <td>2.0</td>      <td>NaN</td>    </tr>  </tbody></table><div>'"
   ]
  }
 ],
 "metadata": {
  "file_format": "mystnb",
  "kernelspec": {
   "display_name": "python3",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.16"
  },
  "source_map": [
   5,
   8,
   14,
   22,
   26
  ]
 },
 "nbformat": 4,
 "nbformat_minor": 5
}